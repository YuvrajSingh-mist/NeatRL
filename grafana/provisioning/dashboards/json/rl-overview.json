{
  "id": null,
  "uid": "rl-overview",
  "title": "RL Leaderboard Overview",
  "timezone": "browser",
  "schemaVersion": 39,
  "version": 1,
  "refresh": "10s",
  "panels": [
    {
      "type": "graph",
      "title": "Submissions Received (last $__range)",
      "gridPos": {"x": 0, "y": 0, "w": 12, "h": 8},
      "bars": true,
      "lines": false,
      "targets": [
        {"expr": "sum(increase(submissions_received_total[$__range]))", "legendFormat": "received"}
      ]
    },
    {
      "type": "graph",
      "title": "Evaluations Completed (last $__range)",
      "gridPos": {"x": 12, "y": 0, "w": 12, "h": 8},
      "bars": true,
      "lines": false,
      "targets": [
        {"expr": "sum(increase(evaluation_completed_total[$__range]))", "legendFormat": "completed"}
      ]
    },
    {
      "type": "graph",
      "title": "Evaluations Failed (last $__range)",
      "gridPos": {"x": 0, "y": 8, "w": 12, "h": 8},
      "bars": true,
      "lines": false,
      "targets": [
        {"expr": "sum(increase(evaluation_failed_total[$__range]))", "legendFormat": "failed"}
      ]
    },
    {
      "type": "graph",
      "title": "Evaluation Duration (p95)",
      "gridPos": {"x": 12, "y": 8, "w": 12, "h": 8},
      "targets": [
        {"expr": "histogram_quantile(0.95, sum(rate(evaluation_duration_seconds_bucket[$__interval])) by (le, env_id))"}
      ]
    },
    {
      "type": "graph",
      "title": "Leaderboard Query Duration",
      "gridPos": {"x": 0, "y": 16, "w": 12, "h": 8},
      "targets": [
        {"expr": "clamp_min(sum(rate(leaderboard_query_duration_seconds_sum[$__interval])) / sum(rate(leaderboard_query_duration_seconds_count[$__interval])), 0)"}
      ]
    },
    {
      "type": "graph",
      "title": "Submissions by Mode (rate)",
      "gridPos": {"x": 12, "y": 16, "w": 12, "h": 8},
      "targets": [
        {"expr": "sum by (mode) (increase(submissions_received_total[$__interval]))"}
      ]
    },
    {
      "type": "graph",
      "title": "Validation Failures by Reason (rate)",
      "gridPos": {"x": 0, "y": 24, "w": 12, "h": 8},
      "targets": [
        {"expr": "sum by (reason) (increase(submissions_validation_failures_total[$__interval]))"}
      ]
    },
    {
      "type": "stat",
      "title": "Upload Bytes (last $__range)",
      "gridPos": {"x": 12, "y": 24, "w": 12, "h": 8},
      "fieldConfig": {"defaults": {"unit": "decbytes"}},
      "targets": [
        {"expr": "sum(increase(submissions_upload_bytes_total[$__range]))"}
      ]
    },
    {
      "type": "graph",
      "title": "Evaluations Started/Completed/Failed (rate)",
      "gridPos": {"x": 0, "y": 32, "w": 12, "h": 8},
      "targets": [
        {"expr": "sum(increase(evaluation_started_total[$__interval]))", "legendFormat": "started"},
        {"expr": "sum(increase(evaluation_completed_total[$__interval]))", "legendFormat": "completed"},
        {"expr": "sum(increase(evaluation_failed_total[$__interval]))", "legendFormat": "failed"}
      ]
    },
    {
      "type": "graph",
      "title": "Evaluation Duration (p99)",
      "gridPos": {"x": 12, "y": 32, "w": 12, "h": 8},
      "targets": [
        {"expr": "histogram_quantile(0.99, sum(rate(evaluation_duration_seconds_bucket[$__interval])) by (le, env_id))"}
      ]
    },
    {
      "type": "graph",
      "title": "Leaderboard Queries (rate)",
      "gridPos": {"x": 0, "y": 40, "w": 12, "h": 8},
      "targets": [
        {"expr": "sum by (env_id, sort) (increase(leaderboard_queries_total[$__interval]))"}
      ]
    },
    {
      "type": "graph",
      "title": "Celery Queue Length",
      "gridPos": {"x": 12, "y": 40, "w": 12, "h": 8},
      "targets": [
        {"expr": "max by (queue_name) (celery_queue_length)"}
      ]
    },
    {
      "type": "graph",
      "title": "API RPS by Status",
      "gridPos": {"x": 0, "y": 48, "w": 12, "h": 8},
      "targets": [
        {"expr": "sum by (status_code) (rate(http_requests_total[$__interval]))"}
      ]
    },
    {
      "type": "graph",
      "title": "API Latency p95",
      "gridPos": {"x": 12, "y": 48, "w": 12, "h": 8},
      "targets": [
        {"expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[$__interval])) by (le))"}
      ]
    },
    {
      "type": "stat",
      "title": "Redis Memory Used",
      "gridPos": {"x": 0, "y": 56, "w": 12, "h": 8},
      "fieldConfig": {"defaults": {"unit": "decbytes"}},
      "targets": [
        {"expr": "max(redis_memory_used_bytes)"}
      ]
    },
    {
      "type": "stat",
      "title": "Redis Connected Clients",
      "gridPos": {"x": 12, "y": 56, "w": 12, "h": 8},
      "targets": [
        {"expr": "max(redis_connected_clients)"}
      ]
    },
    {
      "type": "stat",
      "title": "Total API Requests (last $__range)",
      "gridPos": {"x": 12, "y": 64, "w": 12, "h": 8},
      "fieldConfig": {"defaults": {"unit": "short"}},
      "targets": [
        {"expr": "sum(increase(http_requests_total[$__range]))", "refId": "A"}
      ]
    }
    ,
    {
      "type": "graph",
      "title": "Monthly Unique Visitors (JWT)",
      "gridPos": {"x": 0, "y": 72, "w": 12, "h": 8},
      "bars": true,
      "lines": false,
      "timeFrom": "365d",
      "maxDataPoints": 13,
      "targets": [
        {
          "datasource": "Loki",
          "expr": "count(sum by (visitor_id) (count_over_time({service=\"api\", visitor_id=~\".+\"} |= \"request_completed\" [30d])))",
          "refId": "A",
          "interval": "30d"
        }
      ]
    },
    {
      "type": "graph",
      "title": "Monthly API Requests",
      "gridPos": {"x": 12, "y": 72, "w": 12, "h": 8},
      "bars": true,
      "lines": false,
      "timeFrom": "365d",
      "maxDataPoints": 13,
      "targets": [
        {
          "expr": "sum(increase(http_requests_total[30d]))",
          "refId": "A",
          "interval": "30d",
          "legendFormat": "requests"
        }
      ]
    },
    {
      "type": "stat",
      "title": "All-time Unique Visitors",
      "gridPos": {"x": 0, "y": 80, "w": 12, "h": 8},
      "options": {"colorMode": "value", "graphMode": "none", "justifyMode": "center"},
      "timeFrom": "365d",
      "targets": [
        {
          "datasource": "Loki",
          "expr": "count(sum by (visitor_id) (count_over_time({service=\"api\", visitor_id=~\".+\"} |= \"request_completed\" [$__range])))",
          "refId": "A"
        }
      ]
    }
  ]
}

